name: Release

on:
  pull_request:
    types: [labeled, unlabeled, opened, edited, reopened, synchronize, ready_for_review]
  push:
    branches: [main]

jobs:
  validate_pr:
    name: Validate Pull Request
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - uses: jefflinse/pr-semver-bump@v1.6.0
        name: Validate Pull Request Metadata
        with:
          mode: validate
          major-label: release major
          minor-label: release minor
          patch-label: release patch
          repo-token: ${{ secrets.GITHUB_TOKEN }}

  release_process:
    name: Launch
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # NecessÃ¡rio para acessar todas as tags
      
      - name: Bump and Tag Version
        id: bump_tag
        uses: jefflinse/pr-semver-bump@v1.6.0
        with:
          mode: bump
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Release Name
        id: release_name
        run: |
          formatted_date=$(date +'%b %d, %Y')
          echo "name=Release v${{ steps.bump_tag.outputs.version }} ($formatted_date)" >> $GITHUB_OUTPUT

      - name: Generate Release Notes
        id: release_notes
        uses: gableroux/generate-github-release-notes@v0.1.2
        with:
          repository: ${{ github.repository }}
          base_tag: ${{ steps.bump_tag.outputs.old-version }}
          head_tag: ${{ steps.bump_tag.outputs.version }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          body: ${{ steps.release_notes.outputs.notes }}
          tag_name: v${{ steps.bump_tag.outputs.version }}
          name: ${{ steps.release_name.outputs.name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
